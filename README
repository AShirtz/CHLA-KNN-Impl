This file covers running the program in the fastest manner.

In the file 'src/utils/Utils.h' change the MAX_CAN_ADDR_LEN variable to be a high value (20-25)
Compile the source code by running 'make publish'

For each dataset:
	Put the dataset into a csv with the following format:

	vector.x, vector.y, vector.z, id
	vector.x, vector.y, vector.z, id

	You are required to ensure that the line endings are '\n'

	Run the 'target/release/Preprocess' program on the dataset
	The program will produce a file and print 'Longest CanAddr: #'
	Record this output number.

After running 'Preprocess' on all the datasets, change the MAX_CAN_ADDR_LEN  variable to be
the greatest value printed from 'Preprocess'.

Delete the files output from the initial 'Preprocess' step.

Rerun 'Preprocess' on each dataset. This may seem like a waste of time, but 'Preprocess' takes less than a second for most datasets, and having MAX_CAN_ADDR_LEN be as small as possible will save time in the second step.

After running 'Preprocess' on all datasets, run the 'target/release/kNearestNeighbors' on the files produced by the 'Preprocess' step. This step can take up to a half hour. 

The file output by the 'kNearestNeighbors' step is a csv with the following format:

operand.id, operand.x, operand.y, operand.z, neighbor1.id, neighbor1.x, neighbor1.y, neighbor1.z, distanceToNeighbor1, neighbor2.id ...., neighborK.id, neighborK.x, neighborK.y, neighborK.z, distanceToNeighborK
